(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require('./pages/main/main');

},{"./pages/main/main":2}],2:[function(require,module,exports){
"use strict";

// eslint-disable-next-line no-undef
var root = document.querySelector('.p-main');

if (root) {
  var el = {
    docs: root.querySelector('[data-docs]')
  }; // eslint-disable-next-line no-undef

  fetch('https://api.github.com/repos/alexpryshchepa/gulp-starter/readme', {
    headers: {
      Accept: 'application/vnd.github.v3.html'
    }
  }).then(function (response) {
    return response.text();
  }).then(function (data) {
    el.docs.innerHTML = data;
  })["catch"](function () {
    el.docs.innerHTML = 'Can not retrieve README.md';
  });
}

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvaW5kZXguanMiLCJzcmMvcGFnZXMvbWFpbi9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxPQUFPLENBQUMsbUJBQUQsQ0FBUDs7Ozs7QUNBQTtBQUNBLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLFNBQXZCLENBQWI7O0FBRUEsSUFBSSxJQUFKLEVBQVU7QUFDUixNQUFNLEVBQUUsR0FBRztBQUNULElBQUEsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFMLENBQW1CLGFBQW5CO0FBREcsR0FBWCxDQURRLENBS1I7O0FBQ0EsRUFBQSxLQUFLLENBQUMsaUVBQUQsRUFBb0U7QUFDdkUsSUFBQSxPQUFPLEVBQUU7QUFDUCxNQUFBLE1BQU0sRUFBRTtBQUREO0FBRDhELEdBQXBFLENBQUwsQ0FLRyxJQUxILENBS1EsVUFBQyxRQUFEO0FBQUEsV0FBYyxRQUFRLENBQUMsSUFBVCxFQUFkO0FBQUEsR0FMUixFQU1HLElBTkgsQ0FNUSxVQUFDLElBQUQsRUFBVTtBQUNkLElBQUEsRUFBRSxDQUFDLElBQUgsQ0FBUSxTQUFSLEdBQW9CLElBQXBCO0FBQ0QsR0FSSCxXQVFXLFlBQU07QUFDYixJQUFBLEVBQUUsQ0FBQyxJQUFILENBQVEsU0FBUixHQUFvQiw0QkFBcEI7QUFDRCxHQVZIO0FBV0QiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwicmVxdWlyZSgnLi9wYWdlcy9tYWluL21haW4nKTtcbiIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuY29uc3Qgcm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wLW1haW4nKTtcblxuaWYgKHJvb3QpIHtcbiAgY29uc3QgZWwgPSB7XG4gICAgZG9jczogcm9vdC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1kb2NzXScpLFxuICB9O1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBmZXRjaCgnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9hbGV4cHJ5c2hjaGVwYS9ndWxwLXN0YXJ0ZXIvcmVhZG1lJywge1xuICAgIGhlYWRlcnM6IHtcbiAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL3ZuZC5naXRodWIudjMuaHRtbCcsXG4gICAgfSxcbiAgfSlcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLnRleHQoKSlcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgZWwuZG9jcy5pbm5lckhUTUwgPSBkYXRhO1xuICAgIH0pLmNhdGNoKCgpID0+IHtcbiAgICAgIGVsLmRvY3MuaW5uZXJIVE1MID0gJ0NhbiBub3QgcmV0cmlldmUgUkVBRE1FLm1kJztcbiAgICB9KTtcbn1cbiJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKemNtTXZhVzVrWlhndWFuTWlMQ0p6Y21NdmNHRm5aWE12YldGcGJpOXRZV2x1TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPenM3UVVOQlFTeFBRVUZQTEVOQlFVTXNiVUpCUVVRc1EwRkJVRHM3T3pzN1FVTkJRVHRCUVVOQkxFbEJRVTBzU1VGQlNTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xGTkJRWFpDTEVOQlFXSTdPMEZCUlVFc1NVRkJTU3hKUVVGS0xFVkJRVlU3UVVGRFVpeE5RVUZOTEVWQlFVVXNSMEZCUnp0QlFVTlVMRWxCUVVFc1NVRkJTU3hGUVVGRkxFbEJRVWtzUTBGQlF5eGhRVUZNTEVOQlFXMUNMR0ZCUVc1Q08wRkJSRWNzUjBGQldDeERRVVJSTEVOQlMxSTdPMEZCUTBFc1JVRkJRU3hMUVVGTExFTkJRVU1zYVVWQlFVUXNSVUZCYjBVN1FVRkRka1VzU1VGQlFTeFBRVUZQTEVWQlFVVTdRVUZEVUN4TlFVRkJMRTFCUVUwc1JVRkJSVHRCUVVSRU8wRkJSRGhFTEVkQlFYQkZMRU5CUVV3c1EwRkxSeXhKUVV4SUxFTkJTMUVzVlVGQlF5eFJRVUZFTzBGQlFVRXNWMEZCWXl4UlFVRlJMRU5CUVVNc1NVRkJWQ3hGUVVGa08wRkJRVUVzUjBGTVVpeEZRVTFITEVsQlRrZ3NRMEZOVVN4VlFVRkRMRWxCUVVRc1JVRkJWVHRCUVVOa0xFbEJRVUVzUlVGQlJTeERRVUZETEVsQlFVZ3NRMEZCVVN4VFFVRlNMRWRCUVc5Q0xFbEJRWEJDTzBGQlEwUXNSMEZTU0N4WFFWRlhMRmxCUVUwN1FVRkRZaXhKUVVGQkxFVkJRVVVzUTBGQlF5eEpRVUZJTEVOQlFWRXNVMEZCVWl4SFFVRnZRaXcwUWtGQmNFSTdRVUZEUkN4SFFWWklPMEZCVjBRaUxDSm1hV3hsSWpvaVoyVnVaWEpoZEdWa0xtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWhtZFc1amRHbHZiaWdwZTJaMWJtTjBhVzl1SUhJb1pTeHVMSFFwZTJaMWJtTjBhVzl1SUc4b2FTeG1LWHRwWmlnaGJsdHBYU2w3YVdZb0lXVmJhVjBwZTNaaGNpQmpQVndpWm5WdVkzUnBiMjVjSWowOWRIbHdaVzltSUhKbGNYVnBjbVVtSm5KbGNYVnBjbVU3YVdZb0lXWW1KbU1wY21WMGRYSnVJR01vYVN3aE1DazdhV1lvZFNseVpYUjFjbTRnZFNocExDRXdLVHQyWVhJZ1lUMXVaWGNnUlhKeWIzSW9YQ0pEWVc1dWIzUWdabWx1WkNCdGIyUjFiR1VnSjF3aUsya3JYQ0luWENJcE8zUm9jbTkzSUdFdVkyOWtaVDFjSWsxUFJGVk1SVjlPVDFSZlJrOVZUa1JjSWl4aGZYWmhjaUJ3UFc1YmFWMDllMlY0Y0c5eWRITTZlMzE5TzJWYmFWMWJNRjB1WTJGc2JDaHdMbVY0Y0c5eWRITXNablZ1WTNScGIyNG9jaWw3ZG1GeUlHNDlaVnRwWFZzeFhWdHlYVHR5WlhSMWNtNGdieWh1Zkh4eUtYMHNjQ3h3TG1WNGNHOXlkSE1zY2l4bExHNHNkQ2w5Y21WMGRYSnVJRzViYVYwdVpYaHdiM0owYzMxbWIzSW9kbUZ5SUhVOVhDSm1kVzVqZEdsdmJsd2lQVDEwZVhCbGIyWWdjbVZ4ZFdseVpTWW1jbVZ4ZFdseVpTeHBQVEE3YVR4MExteGxibWQwYUR0cEt5c3BieWgwVzJsZEtUdHlaWFIxY200Z2IzMXlaWFIxY200Z2NuMHBLQ2tpTENKeVpYRjFhWEpsS0NjdUwzQmhaMlZ6TDIxaGFXNHZiV0ZwYmljcE8xeHVJaXdpTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUc1dkxYVnVaR1ZtWEc1amIyNXpkQ0J5YjI5MElEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuQXRiV0ZwYmljcE8xeHVYRzVwWmlBb2NtOXZkQ2tnZTF4dUlDQmpiMjV6ZENCbGJDQTlJSHRjYmlBZ0lDQmtiMk56T2lCeWIyOTBMbkYxWlhKNVUyVnNaV04wYjNJb0oxdGtZWFJoTFdSdlkzTmRKeWtzWEc0Z0lIMDdYRzVjYmlBZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHNXZMWFZ1WkdWbVhHNGdJR1psZEdOb0tDZG9kSFJ3Y3pvdkwyRndhUzVuYVhSb2RXSXVZMjl0TDNKbGNHOXpMMkZzWlhod2NubHphR05vWlhCaEwyZDFiSEF0YzNSaGNuUmxjaTl5WldGa2JXVW5MQ0I3WEc0Z0lDQWdhR1ZoWkdWeWN6b2dlMXh1SUNBZ0lDQWdRV05qWlhCME9pQW5ZWEJ3YkdsallYUnBiMjR2ZG01a0xtZHBkR2gxWWk1Mk15NW9kRzFzSnl4Y2JpQWdJQ0I5TEZ4dUlDQjlLVnh1SUNBZ0lDNTBhR1Z1S0NoeVpYTndiMjV6WlNrZ1BUNGdjbVZ6Y0c5dWMyVXVkR1Y0ZENncEtWeHVJQ0FnSUM1MGFHVnVLQ2hrWVhSaEtTQTlQaUI3WEc0Z0lDQWdJQ0JsYkM1a2IyTnpMbWx1Ym1WeVNGUk5UQ0E5SUdSaGRHRTdYRzRnSUNBZ2ZTa3VZMkYwWTJnb0tDa2dQVDRnZTF4dUlDQWdJQ0FnWld3dVpHOWpjeTVwYm01bGNraFVUVXdnUFNBblEyRnVJRzV2ZENCeVpYUnlhV1YyWlNCU1JVRkVUVVV1YldRbk8xeHVJQ0FnSUgwcE8xeHVmVnh1SWwxOSJ9
